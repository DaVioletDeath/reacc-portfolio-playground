{"version":3,"sources":["assets/OnHand.png","assets/CodeQuiz.png","assets/DayPlanner.png","assets/FitnessTracker.png","assets/AboutMe.png","assets/FirstImpression.png","pages/AboutMe.js","components/Project.js","pages/Portfolio.js","pages/Contact.js","components/Footer.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AboutMe","className","Project","title","link","github","gif","src","alt","href","style","backgroundColor","Portfolio","OnHand","FirstImpression","FitnessTracker","DayPlanner","CodeQuiz","Contact","class","aria-hidden","Footer","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","NavbarText","Header","props","to","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.98357e47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/OnHand.a5e8b91d.png\";","module.exports = __webpack_public_path__ + \"static/media/CodeQuiz.73bc538f.png\";","module.exports = __webpack_public_path__ + \"static/media/DayPlanner.ec4c9155.png\";","module.exports = __webpack_public_path__ + \"static/media/FitnessTracker.162863b9.png\";","module.exports = __webpack_public_path__ + \"static/media/AboutMe.f5b27726.png\";","module.exports = __webpack_public_path__ + \"static/media/FirstImpression.ac525f0e.png\";","import React from 'react';\r\n\r\nexport default function AboutMe(){\r\n    return (\r\n        <div className = \"container\">\r\n            <h1>About Me</h1>\r\n            <p> I'm an up and coming programmer born in New Jersey and raised in Tennessee.\r\n                My mom was a software engineer for a government based firm and having been around programming and coding all my life, i started to become really interested in it and wanted\r\n                to learn more about it. So currently i am going through a coding boot camp hosted by Vanderbilt to learn more and while it's kicking my ass, I do feel like my knowledge is \r\n                slowly growing and I am definitely becoming more and more interested in coding.\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nexport default function Project({title, link, github, gif}){\r\n    return (\r\n        <div className=\"col-4 mt-3\">\r\n        <div className=\"card\">\r\n            <img src={gif} className=\"card-img-top\" alt={title}/>\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{title}</h5>\r\n            <a href= {link} className=\"btn text-light\" style={{backgroundColor:'#8D07F6'}}>Deployed Site</a>\r\n            <a href={github} className=\"ml-3 btn text-light\" style={{backgroundColor:'#8D07F6'}}>Github Repo</a>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport OnHand from '../assets/OnHand.png'\r\nimport CodeQuiz from '../assets/CodeQuiz.png'\r\nimport DayPlanner from '../assets/DayPlanner.png'\r\nimport FitnessTracker from '../assets/FitnessTracker.png'\r\nimport AboutMe from '../assets/AboutMe.png'\r\nimport FirstImpression from '../assets/FirstImpression.png'\r\nimport Project from \"../components/Project\"\r\nexport default function Portfolio(){\r\n    return (\r\n        <div className= \"container-fluid\">\r\n            <h1>Portfolio</h1>\r\n            <div className='row'>\r\n            <Project title = 'OnHand' link = \"https://msplawn.github.io/on-hand/\" github = \"https://github.com/msplawn/on-hand\" gif = {OnHand} />\r\n            <Project title = 'First Impression' link = \"https://pacific-basin-52237.herokuapp.com/\" github = \"https://github.com/JoeWills615/First_Impression\" gif = {FirstImpression} />\r\n            <Project title = 'PW About Me Page' link = \"https://davioletdeath.github.io/prework-about-me/\" github = \"https://github.com/DaVioletDeath/prework-about-me\" gif = {AboutMe} />\r\n            <Project title = 'Fitness Tracker' link = \"https://fitness-tracker-v.herokuapp.com/\" github = \"https://github.com/DaVioletDeath/Fitness-Tracker\" gif = {FitnessTracker} />\r\n            <Project title = 'Day Planner' link = \"https://davioletdeath.github.io/Day-Planner/\" github = \"https://github.com/DaVioletDeath/Day-Planner\" gif = {DayPlanner} />\r\n            <Project title = 'Code Quiz' link = \"https://davioletdeath.github.io/Code_Quiz/\" github = \"https://github.com/DaVioletDeath/Code_Quiz\" gif = {CodeQuiz} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Contact(){\r\n    return (\r\n        <div className= \"container\">\r\n        <h1>Contact</h1>\r\n        <hr />\r\n         <h2><i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i>email: ladymariaownsbro@gmail.com</h2>\r\n            \r\n         <h2>phone: 615-971-0152</h2>\r\n                  \r\n         <h2>discord: Violet#6776</h2>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText\r\n} from 'reactstrap';\r\nconst Footer = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Links</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink  href=\"https://github.com/DaVioletDeath\">GitHub</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"https://www.linkedin.com/in/davioletdeath\">LinkedIn</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"https://resume.io/r/3S4H4nVnU\">Resume</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <NavbarText></NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText\r\n} from 'reactstrap';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Violet Dreyfuss</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink><Link to = \"/\">About Me</Link></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink><Link to = \"/portfolio\">Portfolio</Link></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink><Link to = \"/contact\">Contact</Link></NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <NavbarText></NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport {\n  AboutMe,\n  Portfolio,\n  Contact\n} from \"./pages\"\nimport './App.css';\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/portfolio\">\n            <Portfolio />\n          </Route>\n          <Route path=\"/\">\n            <AboutMe />\n          </Route>\n        </Switch>\n        <Footer />\n\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}